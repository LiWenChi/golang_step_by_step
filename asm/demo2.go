package main

import "fmt"

func main() {
	fmt.Println("hello world")
}

// ➜  asm git:(master) ✗ go tool compile -S demo2.go
// os.(*File).close STEXT dupok nosplit size=26 args=0x18 locals=0x0
// 哈哈看不懂，文件的处理
// 	0x0000 00000 (<autogenerated>:1)	TEXT	os.(*File).close(SB), DUPOK|NOSPLIT|ABIInternal, $0-24
// 	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·e6397a44f8e1b6e77d0f200b4fba5269(SB)
// 	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
// 	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$3, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
// 	0x0000 00000 (<autogenerated>:1)	PCDATA	$2, $1
// 	0x0000 00000 (<autogenerated>:1)	PCDATA	$0, $1
// 	0x0000 00000 (<autogenerated>:1)	MOVQ	""..this+8(SP), AX
// 	0x0005 00005 (<autogenerated>:1)	MOVQ	(AX), AX
// 	0x0008 00008 (<autogenerated>:1)	PCDATA	$2, $0
// 	0x0008 00008 (<autogenerated>:1)	PCDATA	$0, $0
// 	0x0008 00008 (<autogenerated>:1)	MOVQ	AX, ""..this+8(SP)
// 	0x000d 00013 (<autogenerated>:1)	XORPS	X0, X0
// 	0x0010 00016 (<autogenerated>:1)	MOVUPS	X0, "".~r0+16(SP)
// 	0x0015 00021 (<autogenerated>:1)	JMP	os.(*file).close(SB)
// 	0x0000 48 8b 44 24 08 48 8b 00 48 89 44 24 08 0f 57 c0  H.D$.H..H.D$..W.
// 	0x0010 0f 11 44 24 10 e9 00 00 00 00                    ..D$......
// 	rel 22+4 t=8 os.(*file).close+0
// "".main STEXT size=138 args=0x0 locals=0x58
// 	0x0000 00000 (demo2.go:5)	TEXT	"".main(SB), ABIInternal, $88-0
// 	0x0000 00000 (demo2.go:5)	MOVQ	(TLS), CX
// 	0x0009 00009 (demo2.go:5)	CMPQ	SP, 16(CX)
// 	0x000d 00013 (demo2.go:5)	JLS	128
//  类似demo1，调用前增长栈
// 	0x000f 00015 (demo2.go:5)	SUBQ	$88, SP
// 	0x0013 00019 (demo2.go:5)	MOVQ	BP, 80(SP)
// 	0x0018 00024 (demo2.go:5)	LEAQ	80(SP), BP
// 	0x001d 00029 (demo2.go:5)	FUNCDATA	$0, gclocals·69c1753bd5f81501d95132d08af04464(SB)
// 	0x001d 00029 (demo2.go:5)	FUNCDATA	$1, gclocals·568470801006e5c0dc3947ea998fe279(SB)
// 	0x001d 00029 (demo2.go:5)	FUNCDATA	$3, gclocals·bfec7e55b3f043d1941c093912808913(SB)
// 	0x001d 00029 (demo2.go:5)	FUNCDATA	$4, "".main.stkobj(SB)
// 	0x001d 00029 (demo2.go:6)	PCDATA	$2, $0
// 	0x001d 00029 (demo2.go:6)	PCDATA	$0, $1
// 	0x001d 00029 (demo2.go:6)	XORPS	X0, X0
// 	0x0020 00032 (demo2.go:6)	MOVUPS	X0, ""..autotmp_9+64(SP)
// 	0x0025 00037 (demo2.go:6)	PCDATA	$2, $1
// 	0x0025 00037 (demo2.go:6)	LEAQ	type.string(SB), AX
// 	0x002c 00044 (demo2.go:6)	PCDATA	$2, $0
// 	0x002c 00044 (demo2.go:6)	MOVQ	AX, ""..autotmp_9+64(SP)
// 	0x0031 00049 (demo2.go:6)	PCDATA	$2, $1
// 	0x0031 00049 (demo2.go:6)	LEAQ	"".statictmp_0(SB), AX
// 	0x0038 00056 (demo2.go:6)	PCDATA	$2, $0
// 	0x0038 00056 (demo2.go:6)	MOVQ	AX, ""..autotmp_9+72(SP)
// 	0x003d 00061 (demo2.go:6)	XCHGL	AX, AX
// 	0x003e 00062 ($GOROOT/src/fmt/print.go:275)	PCDATA	$2, $1
//  获取标准输出文件
// 	0x003e 00062 ($GOROOT/src/fmt/print.go:275)	MOVQ	os.Stdout(SB), AX
// 	0x0045 00069 ($GOROOT/src/fmt/print.go:275)	PCDATA	$2, $2
// 	0x0045 00069 ($GOROOT/src/fmt/print.go:275)	LEAQ	go.itab.*os.File,io.Writer(SB), CX
// 	0x004c 00076 ($GOROOT/src/fmt/print.go:275)	PCDATA	$2, $1
// 	0x004c 00076 ($GOROOT/src/fmt/print.go:275)	MOVQ	CX, (SP)
// 	0x0050 00080 ($GOROOT/src/fmt/print.go:275)	PCDATA	$2, $0
// 	0x0050 00080 ($GOROOT/src/fmt/print.go:275)	MOVQ	AX, 8(SP)
// 	0x0055 00085 ($GOROOT/src/fmt/print.go:275)	PCDATA	$2, $1
// 	0x0055 00085 ($GOROOT/src/fmt/print.go:275)	PCDATA	$0, $0
// 	0x0055 00085 ($GOROOT/src/fmt/print.go:275)	LEAQ	""..autotmp_9+64(SP), AX
// 	0x005a 00090 ($GOROOT/src/fmt/print.go:275)	PCDATA	$2, $0
// 	0x005a 00090 ($GOROOT/src/fmt/print.go:275)	MOVQ	AX, 16(SP)
// 	0x005f 00095 ($GOROOT/src/fmt/print.go:275)	MOVQ	$1, 24(SP)
// 	0x0068 00104 ($GOROOT/src/fmt/print.go:275)	MOVQ	$1, 32(SP)
//  写数据到文件
// 	0x0071 00113 ($GOROOT/src/fmt/print.go:275)	CALL	fmt.Fprintln(SB)
//  栈收缩
// 	0x0076 00118 (<unknown line number>)	MOVQ	80(SP), BP
// 	0x007b 00123 (<unknown line number>)	ADDQ	$88, SP
// 	0x007f 00127 (<unknown line number>)	RET
// 	0x0080 00128 (<unknown line number>)	NOP
// 	0x0080 00128 (demo2.go:5)	PCDATA	$0, $-1
// 	0x0080 00128 (demo2.go:5)	PCDATA	$2, $-1
// 	0x0080 00128 (demo2.go:5)	CALL	runtime.morestack_noctxt(SB)
// 	0x0085 00133 (demo2.go:5)	JMP	0
